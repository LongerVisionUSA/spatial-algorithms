language: generic

sudo: false

matrix:
  include:
    - os: linux
      env: CXX=g++-4.9
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'g++-4.9' ]
      # override before_install to use apt installed compiler
      # rather than mason installed clang++
      before_install:
        - which ${CXX}
    - os: linux
      env: CXX=g++-5
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'g++-5' ]
      # override before_install to use apt installed compiler
      # rather than mason installed clang++
      before_install:
        - which ${CXX}
    - os: linux
      env: CXX=g++-6
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'g++-6' ]
      # override before_install to use apt installed compiler
      # rather than mason installed clang++
      before_install:
        - which ${CXX}
    - os: linux
      env: CXX=clang++ CXXFLAGS="-flto"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++-5-dev' ]
    - os: linux
      env: CXX=clang++ LLVM_VERSION="4.0.0" CXXFLAGS="-flto"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++-5-dev' ]
    - os: linux
      env: CXX=clang++ CXXFLAGS="-flto -fsanitize=cfi -fvisibility=hidden"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++-5-dev' ]
    - os: linux
      env: CXX=clang++ CXXFLAGS="-fsanitize=address -fsanitize-address-use-after-scope -fno-omit-frame-pointer -fno-common"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++-5-dev' ]
    - os: linux
      env: CXX=clang++ CXXFLAGS="-fsanitize=undefined"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++-5-dev' ]
    - os: linux
      env: CXX=clang++ CXXFLAGS="-fsanitize=integer"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++-5-dev' ]
    # OS X / apple clang / xcode 7.x
    - os: osx
      osx_image: xcode7.3
      env: CXX=clang++
      # override before_install to use apple clang
      before_install:
        - which ${CXX}
    # OS X / mason clang 4.0.0 / xcode 8.x
    - os: osx
      osx_image: xcode8.2
      env: CXX=clang++ LLVM_VERSION="4.0.0"

before_install:
 - git submodule update --init
 - export LLVM_VERSION="${LLVM_VERSION:-3.9.1}"
 - |
   if [[ ${CXX} == "clang++" ]]; then
    ./scripts/mason.sh install clang++ ${LLVM_VERSION}
    export PATH=$(./scripts/mason.sh prefix clang++ ${LLVM_VERSION})/bin:${PATH}
    ./scripts/mason.sh install binutils 2.27
    export PATH=$(./scripts/mason.sh prefix binutils 2.27)/bin:${PATH}
   fi
 - which ${CXX}

before_script:
 - cmake .

script:
 - make -j
 - ./test_sa

